#include<bits/stdc++.h>
using namespace std;
struct Node *creatalink(int a[],int siz);
//int searcelink(struct Node *head,int value);
void reversalinklist(struct Node* head);
struct Node{
    int data;
    struct Node *next;
};
int main()
{
   int a[]={10,20,30,40,50};
   struct Node *head=NULL;
   struct Node *newhead;
   head = creatalink(a, 5);
   newhead=head;
    while(head!=NULL){
        cout<<head->data<<"->";
      head= head->next;
   }
    cout<<"NULL"<<endl;
    reversalinklist(newhead);
//    struct Node *current=head;
//
// cout<<"indeX: "<<searcelink(head,30)<<endl;

    return 0;
}
void reversalinklist(struct Node* head){
  struct Node *pre=NULL,*current=head,*next=NULL;
  while(current!=NULL){
    next=current->next;
    current->next=pre;
    pre=current;
    current=next;
  }
  head=pre;
  while(head!=NULL){
        cout<<head->data<<"->";
      head= head->next;
   }
   cout<<"NULL"<<endl;

}
//int searcelink(struct Node *head,int value){
//    int index=1;
//    while(head!=NULL){
//        if(head->data==value){
//            return index;
//        }
//        index++;
//        head=head->next;
//    }
//    return -1;
//}
struct Node *creatalink(int a[],int siz){
    struct Node *head=NULL,*tell=NULL,*current=NULL;
    int i;
    for(i=0;i<siz;i++){
        tell=(struct Node*)malloc(sizeof(struct Node));
        tell->data=a[i];
        tell->next=NULL;
        if(head==NULL){
            head=tell;
            current=tell;
        }
        else{
            current->next=tell;
            current=current->next;
        }

    }
    return head;
}
